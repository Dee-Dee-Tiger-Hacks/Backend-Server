syntax = "proto3";

package pb;

import "rpc_user_service.proto";
import "rpc_activity_service.proto";
import "rpc_movie_service.proto";
import "rpc_fav_movies_service.proto";
import "rpc_verify_email.proto";
import "rpc_token_service.proto";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/CineDeepMatch/Backend-server/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "CineDeepMatch API";
    version: "1.0";
    contact: {
      name: "Dat";
      url: "https://github.com/CineDeepMatch/Backend-server";
      email: "trongdatvuong@gmail.com";
    };
    license: {
      name: "BSD 3-Clause License";
      url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
    };
    extensions: {
      key: "x-something-something";
      value {string_value: "yadda"}
    }
  };
};

service CineDeepMatch {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };
    };
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
      option (google.api.http) = {
          put: "/v1/update_user/{user_id}"
          body: "*"
      };
    };
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
    };
    rpc CreateActivity (CreateActivityRequest) returns (CreateActivityResponse) {
      option (google.api.http) = {
          post: "/v1/create_activity"
          body: "*"
      };
    };
    rpc GetActivities (GetActivitiesRequest) returns (GetActivitiesResponse) {
      option (google.api.http) = {
          get: "/v1/get_activities/{user_id}"
      };
    };
    rpc GetMovie (GetMovieRequest) returns (GetMovieResponse) {
      option (google.api.http) = {
          get: "/v1/get_movie/{movie_id}"
      };
    };
    rpc GetManyMovies (GetManyMoviesRequest) returns (GetManyMoviesResponse) {
      option (google.api.http) = {
          get: "/v1/get_movies"
      };
    };
    rpc CreateFavMovies (CreateFavMoviesRequest) returns (CreateFavMoviesResponse) {
      option (google.api.http) = {
          post: "/v1/create_fav_movies"
          body: "*"
      };
    };
    rpc GetFavMovies (GetFavMoviesRequest) returns (GetFavMoviesResponse) {
      option (google.api.http) = {
          get: "/v1/get_fav_movies/{user_id}"
      };
    };
    rpc UpdateFavMovies (UpdateFavMoviesRequest) returns (UpdateFavMoviesResponse) {
      option (google.api.http) = {
          put: "/v1/update_fav_movies/{user_id}"
          body: "*"
      };
    };
    rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
      option (google.api.http) = {
          get: "/v1/verify_email"
      };
    };  
    rpc RenewAccessToken (RenewAccessTokenRequest) returns (RenewAccessTokenResponse) {
      option (google.api.http) = {
          post: "/v1/renew_access_token"
          body: "*"
      };
    }; 
}
