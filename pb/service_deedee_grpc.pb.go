// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.2
// source: service_deedee.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DeeDeeClient is the client API for DeeDee service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DeeDeeClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error)
	CreateRecruiter(ctx context.Context, in *CreateRecruiterRequest, opts ...grpc.CallOption) (*CreateRecruiterResponse, error)
	GetRecruiters(ctx context.Context, in *GetRecruitersRequest, opts ...grpc.CallOption) (*GetRecruitersResponse, error)
	GetRecruiter(ctx context.Context, in *GetRecruiterRequest, opts ...grpc.CallOption) (*GetRecruiterResponse, error)
	VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*VerifyEmailResponse, error)
	RenewAccessToken(ctx context.Context, in *RenewAccessTokenRequest, opts ...grpc.CallOption) (*RenewAccessTokenResponse, error)
}

type deeDeeClient struct {
	cc grpc.ClientConnInterface
}

func NewDeeDeeClient(cc grpc.ClientConnInterface) DeeDeeClient {
	return &deeDeeClient{cc}
}

func (c *deeDeeClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/pb.DeeDee/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deeDeeClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := c.cc.Invoke(ctx, "/pb.DeeDee/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deeDeeClient) LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error) {
	out := new(LoginUserResponse)
	err := c.cc.Invoke(ctx, "/pb.DeeDee/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deeDeeClient) CreateRecruiter(ctx context.Context, in *CreateRecruiterRequest, opts ...grpc.CallOption) (*CreateRecruiterResponse, error) {
	out := new(CreateRecruiterResponse)
	err := c.cc.Invoke(ctx, "/pb.DeeDee/CreateRecruiter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deeDeeClient) GetRecruiters(ctx context.Context, in *GetRecruitersRequest, opts ...grpc.CallOption) (*GetRecruitersResponse, error) {
	out := new(GetRecruitersResponse)
	err := c.cc.Invoke(ctx, "/pb.DeeDee/GetRecruiters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deeDeeClient) GetRecruiter(ctx context.Context, in *GetRecruiterRequest, opts ...grpc.CallOption) (*GetRecruiterResponse, error) {
	out := new(GetRecruiterResponse)
	err := c.cc.Invoke(ctx, "/pb.DeeDee/GetRecruiter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deeDeeClient) VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*VerifyEmailResponse, error) {
	out := new(VerifyEmailResponse)
	err := c.cc.Invoke(ctx, "/pb.DeeDee/VerifyEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deeDeeClient) RenewAccessToken(ctx context.Context, in *RenewAccessTokenRequest, opts ...grpc.CallOption) (*RenewAccessTokenResponse, error) {
	out := new(RenewAccessTokenResponse)
	err := c.cc.Invoke(ctx, "/pb.DeeDee/RenewAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeeDeeServer is the server API for DeeDee service.
// All implementations must embed UnimplementedDeeDeeServer
// for forward compatibility
type DeeDeeServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error)
	CreateRecruiter(context.Context, *CreateRecruiterRequest) (*CreateRecruiterResponse, error)
	GetRecruiters(context.Context, *GetRecruitersRequest) (*GetRecruitersResponse, error)
	GetRecruiter(context.Context, *GetRecruiterRequest) (*GetRecruiterResponse, error)
	VerifyEmail(context.Context, *VerifyEmailRequest) (*VerifyEmailResponse, error)
	RenewAccessToken(context.Context, *RenewAccessTokenRequest) (*RenewAccessTokenResponse, error)
	mustEmbedUnimplementedDeeDeeServer()
}

// UnimplementedDeeDeeServer must be embedded to have forward compatible implementations.
type UnimplementedDeeDeeServer struct {
}

func (UnimplementedDeeDeeServer) CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedDeeDeeServer) UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (UnimplementedDeeDeeServer) LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}
func (UnimplementedDeeDeeServer) CreateRecruiter(context.Context, *CreateRecruiterRequest) (*CreateRecruiterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecruiter not implemented")
}
func (UnimplementedDeeDeeServer) GetRecruiters(context.Context, *GetRecruitersRequest) (*GetRecruitersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecruiters not implemented")
}
func (UnimplementedDeeDeeServer) GetRecruiter(context.Context, *GetRecruiterRequest) (*GetRecruiterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecruiter not implemented")
}
func (UnimplementedDeeDeeServer) VerifyEmail(context.Context, *VerifyEmailRequest) (*VerifyEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyEmail not implemented")
}
func (UnimplementedDeeDeeServer) RenewAccessToken(context.Context, *RenewAccessTokenRequest) (*RenewAccessTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenewAccessToken not implemented")
}
func (UnimplementedDeeDeeServer) mustEmbedUnimplementedDeeDeeServer() {}

// UnsafeDeeDeeServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DeeDeeServer will
// result in compilation errors.
type UnsafeDeeDeeServer interface {
	mustEmbedUnimplementedDeeDeeServer()
}

func RegisterDeeDeeServer(s grpc.ServiceRegistrar, srv DeeDeeServer) {
	s.RegisterService(&DeeDee_ServiceDesc, srv)
}

func _DeeDee_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeeDeeServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DeeDee/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeeDeeServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeeDee_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeeDeeServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DeeDee/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeeDeeServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeeDee_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeeDeeServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DeeDee/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeeDeeServer).LoginUser(ctx, req.(*LoginUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeeDee_CreateRecruiter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRecruiterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeeDeeServer).CreateRecruiter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DeeDee/CreateRecruiter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeeDeeServer).CreateRecruiter(ctx, req.(*CreateRecruiterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeeDee_GetRecruiters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecruitersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeeDeeServer).GetRecruiters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DeeDee/GetRecruiters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeeDeeServer).GetRecruiters(ctx, req.(*GetRecruitersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeeDee_GetRecruiter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecruiterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeeDeeServer).GetRecruiter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DeeDee/GetRecruiter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeeDeeServer).GetRecruiter(ctx, req.(*GetRecruiterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeeDee_VerifyEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeeDeeServer).VerifyEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DeeDee/VerifyEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeeDeeServer).VerifyEmail(ctx, req.(*VerifyEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeeDee_RenewAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewAccessTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeeDeeServer).RenewAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DeeDee/RenewAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeeDeeServer).RenewAccessToken(ctx, req.(*RenewAccessTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DeeDee_ServiceDesc is the grpc.ServiceDesc for DeeDee service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DeeDee_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.DeeDee",
	HandlerType: (*DeeDeeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _DeeDee_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _DeeDee_UpdateUser_Handler,
		},
		{
			MethodName: "LoginUser",
			Handler:    _DeeDee_LoginUser_Handler,
		},
		{
			MethodName: "CreateRecruiter",
			Handler:    _DeeDee_CreateRecruiter_Handler,
		},
		{
			MethodName: "GetRecruiters",
			Handler:    _DeeDee_GetRecruiters_Handler,
		},
		{
			MethodName: "GetRecruiter",
			Handler:    _DeeDee_GetRecruiter_Handler,
		},
		{
			MethodName: "VerifyEmail",
			Handler:    _DeeDee_VerifyEmail_Handler,
		},
		{
			MethodName: "RenewAccessToken",
			Handler:    _DeeDee_RenewAccessToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_deedee.proto",
}
